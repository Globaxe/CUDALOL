#pragma once

/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

namespace cpu
    {

    /**
     * F Pour Float
     */
    template<typename T>
    class Interval
	{

	    /*--------------------------------------*\
	    |*		Constructor	      		*|
	     \*-------------------------------------*/

	public:

	    Interval(T a, T b)
		{
		this->a = a;
		this->b = b;
		}


	    virtual ~Interval()
		{
		// rien
		}

	    /*--------------------------------------*\
	    |*		Methode	      		*|
	     \*-------------------------------------*/

	public:

	    T getA(void)
		{
		return this->a;
		}

	    T getB(void)
		{
		return this->b;
		}

	    /*--------------------------------------*\
	   |*		Attribut	      		*|
	     \*-------------------------------------*/

	public:

	    T a;
	    T b;
	};

    }


/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/
