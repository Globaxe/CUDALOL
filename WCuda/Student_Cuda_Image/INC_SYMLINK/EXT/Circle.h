#pragma once

#include "Shape.h"

/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

class Circle: public Shape
    {

	/*--------------------------------------*\
	 |*		Constructor		*|
	 \*-------------------------------------*/

    public:

	Circle(AppearanceShape* ptrAppearance, cv::Point center, int radius);

	virtual ~Circle();

	/*--------------------------------------*\
	 |*		Methodes		*|
	 \*-------------------------------------*/

    public :

	// Override
	void draw(cv::Mat* ptrImage);

	/*--------------------------------------*\
	 |*		Get			*|
	 \*-------------------------------------*/

	inline cv::Point getCenter() const
	    {
	    return center;
	    }

	inline int getRadius() const
	    {
	    return radius;
	    }

	/*--------------------------------------*\
	 |*		Set			*|
	 \*-------------------------------------*/

	void setPoint(cv::Point center);

	void setRadius(int radius);

	/*--------------------------------------*\
	 |*		Attributs		*|
	 \*-------------------------------------*/

    private:

	// Inputs
	cv::Point center;
	int radius;

    };



/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/
